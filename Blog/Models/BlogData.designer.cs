#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blog.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlogDB")]
	public partial class BlogDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTagi(Tagi instance);
    partial void UpdateTagi(Tagi instance);
    partial void DeleteTagi(Tagi instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertKomentarze(Komentarze instance);
    partial void UpdateKomentarze(Komentarze instance);
    partial void DeleteKomentarze(Komentarze instance);
    #endregion
		
		public BlogDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BlogDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ustawienia> Ustawienias
		{
			get
			{
				return this.GetTable<Ustawienia>();
			}
		}
		
		public System.Data.Linq.Table<Tagi> Tagis
		{
			get
			{
				return this.GetTable<Tagi>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<Komentarze> Komentarzes
		{
			get
			{
				return this.GetTable<Komentarze>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ustawienia")]
	public partial class Ustawienia
	{
		
		private string _grupa;
		
		private string _nazwa;
		
		private int _wartosc;
		
		public Ustawienia()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupa", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string grupa
		{
			get
			{
				return this._grupa;
			}
			set
			{
				if ((this._grupa != value))
				{
					this._grupa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this._nazwa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wartosc", DbType="Int NOT NULL")]
		public int wartosc
		{
			get
			{
				return this._wartosc;
			}
			set
			{
				if ((this._wartosc != value))
				{
					this._wartosc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tagi")]
	public partial class Tagi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_post;
		
		private string _keywords;
		
		private string _description;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_postChanging(int value);
    partial void Onid_postChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Tagi()
		{
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_post", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_post
		{
			get
			{
				return this._id_post;
			}
			set
			{
				if ((this._id_post != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_postChanging(value);
					this.SendPropertyChanging();
					this._id_post = value;
					this.SendPropertyChanged("id_post");
					this.Onid_postChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Tagi", Storage="_Post", ThisKey="id_post", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Tagi = null;
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Tagi = this;
						this._id_post = value.id;
					}
					else
					{
						this._id_post = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tytul;
		
		private string _tresc;
		
		private int _status;
		
		private System.DateTime _data_dodania;
		
		private System.DateTime _data_modyfikacji;
		
		private EntityRef<Tagi> _Tagi;
		
		private EntitySet<Komentarze> _Komentarzes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntytulChanging(string value);
    partial void OntytulChanged();
    partial void OntrescChanging(string value);
    partial void OntrescChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Ondata_dodaniaChanging(System.DateTime value);
    partial void Ondata_dodaniaChanged();
    partial void Ondata_modyfikacjiChanging(System.DateTime value);
    partial void Ondata_modyfikacjiChanged();
    #endregion
		
		public Post()
		{
			this._Tagi = default(EntityRef<Tagi>);
			this._Komentarzes = new EntitySet<Komentarze>(new Action<Komentarze>(this.attach_Komentarzes), new Action<Komentarze>(this.detach_Komentarzes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tytul", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tytul
		{
			get
			{
				return this._tytul;
			}
			set
			{
				if ((this._tytul != value))
				{
					this.OntytulChanging(value);
					this.SendPropertyChanging();
					this._tytul = value;
					this.SendPropertyChanged("tytul");
					this.OntytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tresc
		{
			get
			{
				return this._tresc;
			}
			set
			{
				if ((this._tresc != value))
				{
					this.OntrescChanging(value);
					this.SendPropertyChanging();
					this._tresc = value;
					this.SendPropertyChanged("tresc");
					this.OntrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_dodania", DbType="DateTime NOT NULL")]
		public System.DateTime data_dodania
		{
			get
			{
				return this._data_dodania;
			}
			set
			{
				if ((this._data_dodania != value))
				{
					this.Ondata_dodaniaChanging(value);
					this.SendPropertyChanging();
					this._data_dodania = value;
					this.SendPropertyChanged("data_dodania");
					this.Ondata_dodaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_modyfikacji", DbType="DateTime NOT NULL")]
		public System.DateTime data_modyfikacji
		{
			get
			{
				return this._data_modyfikacji;
			}
			set
			{
				if ((this._data_modyfikacji != value))
				{
					this.Ondata_modyfikacjiChanging(value);
					this.SendPropertyChanging();
					this._data_modyfikacji = value;
					this.SendPropertyChanged("data_modyfikacji");
					this.Ondata_modyfikacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Tagi", Storage="_Tagi", ThisKey="id", OtherKey="id_post", IsUnique=true, IsForeignKey=false)]
		public Tagi Tagi
		{
			get
			{
				return this._Tagi.Entity;
			}
			set
			{
				Tagi previousValue = this._Tagi.Entity;
				if (((previousValue != value) 
							|| (this._Tagi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tagi.Entity = null;
						previousValue.Post = null;
					}
					this._Tagi.Entity = value;
					if ((value != null))
					{
						value.Post = this;
					}
					this.SendPropertyChanged("Tagi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Komentarze", Storage="_Komentarzes", ThisKey="id", OtherKey="id_posta")]
		public EntitySet<Komentarze> Komentarzes
		{
			get
			{
				return this._Komentarzes;
			}
			set
			{
				this._Komentarzes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Komentarzes(Komentarze entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Komentarzes(Komentarze entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Komentarze")]
	public partial class Komentarze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_komentarza;
		
		private int _id_posta;
		
		private string _tresc_komentarza;
		
		private string _autor_komentarza;
		
		private System.DateTime _data_dodania_komentarza;
		
		private int _status;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_komentarzaChanging(int value);
    partial void Onid_komentarzaChanged();
    partial void Onid_postaChanging(int value);
    partial void Onid_postaChanged();
    partial void Ontresc_komentarzaChanging(string value);
    partial void Ontresc_komentarzaChanged();
    partial void Onautor_komentarzaChanging(string value);
    partial void Onautor_komentarzaChanged();
    partial void Ondata_dodania_komentarzaChanging(System.DateTime value);
    partial void Ondata_dodania_komentarzaChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public Komentarze()
		{
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
        //Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id_komentarza", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int id_komentarza
		{
			get
			{
				return this._id_komentarza;
			}
			set
			{
				if ((this._id_komentarza != value))
				{
					this.Onid_komentarzaChanging(value);
					this.SendPropertyChanging();
					this._id_komentarza = value;
					this.SendPropertyChanged("id_komentarza");
					this.Onid_komentarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_posta", DbType="Int NOT NULL")]
		public int id_posta
		{
			get
			{
				return this._id_posta;
			}
			set
			{
				if ((this._id_posta != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_postaChanging(value);
					this.SendPropertyChanging();
					this._id_posta = value;
					this.SendPropertyChanged("id_posta");
					this.Onid_postaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc_komentarza", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tresc_komentarza
		{
			get
			{
				return this._tresc_komentarza;
			}
			set
			{
				if ((this._tresc_komentarza != value))
				{
					this.Ontresc_komentarzaChanging(value);
					this.SendPropertyChanging();
					this._tresc_komentarza = value;
					this.SendPropertyChanged("tresc_komentarza");
					this.Ontresc_komentarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autor_komentarza", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string autor_komentarza
		{
			get
			{
				return this._autor_komentarza;
			}
			set
			{
				if ((this._autor_komentarza != value))
				{
					this.Onautor_komentarzaChanging(value);
					this.SendPropertyChanging();
					this._autor_komentarza = value;
					this.SendPropertyChanged("autor_komentarza");
					this.Onautor_komentarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_dodania_komentarza", DbType="DateTime NOT NULL")]
		public System.DateTime data_dodania_komentarza
		{
			get
			{
				return this._data_dodania_komentarza;
			}
			set
			{
				if ((this._data_dodania_komentarza != value))
				{
					this.Ondata_dodania_komentarzaChanging(value);
					this.SendPropertyChanging();
					this._data_dodania_komentarza = value;
					this.SendPropertyChanged("data_dodania_komentarza");
					this.Ondata_dodania_komentarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Komentarze", Storage="_Post", ThisKey="id_posta", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Komentarzes.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Komentarzes.Add(this);
						this._id_posta = value.id;
					}
					else
					{
						this._id_posta = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
